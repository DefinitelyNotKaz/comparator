name: Go

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - platform: darwin
            arch: amd64
            name: mac-intel
          - platform: darwin
            arch: arm64
            name: mac-apple-silicon
          - platform: linux
            arch: amd64
            name: linux-amd64
          - platform: linux
            arch: arm64
            name: linux-arm
          - platform: windows
            arch: amd64
            name: windows-amd64

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Build
      env:
        GOOS: ${{ matrix.platform }}
        GOARCH: ${{ matrix.arch }}
      run: |
        go build -v -o build/${{ matrix.name }} ./...
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.name }}
        path: build/${{ matrix.name }}

  release:
  needs: build
  runs-on: ubuntu-latest
  steps:
  - uses: actions/checkout@v4

  - name: Download all artifacts
    uses: actions/download-artifact@v3
    with:
      path: artifacts

  - name: Get the version
    id: get_version
    run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}

  - name: Create Release
    id: create_release
    uses: actions/create-release@v1
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    with:
      tag_name: ${{ steps.get_version.outputs.VERSION }}
      release_name: Release ${{ steps.get_version.outputs.VERSION }}
      draft: false
      prerelease: false

  - name: Upload Release Assets
    uses: softprops/action-gh-release@v1
    with:
      files: artifacts/**/*
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./artifacts/${{ matrix.name }}/${{ matrix.name }}
        asset_name: ${{ matrix.name }}
        asset_content_type: application/octet-stream